import React from "react";
import { animated, useSpring } from 'react-spring';
import { useScroll } from 'react-use-gesture';
import { useMediaQuery } from 'react-responsive';

const Svganim1 = () => {
    const mediaQ = useMediaQuery({ query: '(max-aspect-ratio: 1/1)' });
    const mobileLaxVal = () => {
        if(mediaQ) {
            return 650;
        } else {
            return 400;
        };
    };

    const [pathAnim , set] = useSpring(() => ({scroll: 0,}));

    const bind = useScroll(
        ({ xy: [, y] }) => {
            set({ scroll: Math.min(Math.max(parseInt(y), 0), mobileLaxVal()) });
        },
        { domTarget: window },
    ); 

    React.useEffect(bind, [bind]);

    return (        
        <svg id="Layer_2" data-name="Layer 2" xmlns="http://www.w3.org/2000/svg" viewBox="0 200 1080 688">
            <title>svganim2</title>
            <animated.path 
            d={pathAnim.scroll.interpolate({
                range: [0, mobileLaxVal() + 1],
                output: [                  
                    "M 1080 821.71 C 1066.81 819.4 1053.14 817.45 1039 815.96 C 924.29 803.86 837 804.66 792.18 817.09 C 663.48 852.82 688.12 884.35 578.55 882.36 C 519.09 881.28 458.67 749.44 303.21 728.08 C 136.93 705.23 137.05 838.45 60 869 C 51.7 872.28 27.85 869.4 0 874.59 L 0 1080 L 1080 1080 Z",
                    
                    "M 1080 404 C 1066 388.29 1034 281 986 248 C 871 217 906 445 834 440 C 691 385 736 142 589 128 C 478 117 367.46 276.36 212 255 C 45.72 232.15 141 373 62 426 C 13 453 27.85 584.36 0 589.55 L 0 1080 L 1080 1080 Z",
                ],
            })}

            fill="#F4F4F4"/>
        </svg>
    )
};


const Svganim2 = () => {

    const [pathAnim , set] = useSpring(() => ({scroll2: 0,}));

    const bind = useScroll(
        ({ xy: [, y] }) => {
            set({ scroll2: Math.min(Math.max(parseInt(y), 0), 50) });
        },
        { domTarget: window },
    ); 

    React.useEffect(bind, [bind]);

    return (        
        <svg id="Layer_2" data-name="Layer 2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1080 688">
            <title>svganim2</title>
            <animated.path 
            d={pathAnim.scroll2.interpolate({
                range: [0, 51],
                output: [                  
                    "M 540 493 C 551.811 493.363 563.571 491.287 574.544 486.903 C 585.517 482.52 595.47 475.921 603.78 467.52 L 794.09 275.25 C 810.101 258.961 819.013 236.967 818.856 214.126 C 818.7 191.286 809.487 169.416 793.254 153.349 C 777.02 137.281 755.057 128.292 732.217 128.369 C 709.376 128.446 687.474 137.583 671.35 153.76 C 671.35 153.76 568.86 32.4 540 32.4 C 511.14 32.4 408.65 153.76 408.65 153.76 C 392.526 137.583 370.624 128.446 347.783 128.369 C 324.943 128.292 302.98 137.281 286.746 153.349 C 270.513 169.416 261.3 191.286 261.144 214.126 C 260.987 236.967 269.899 258.961 285.91 275.25 L 476.22 467.51 C 484.529 475.913 494.482 482.513 505.455 486.899 C 516.428 491.284 528.188 493.361 540 493 Z",
                    
                    "M 540 493 C 551.053 493.338 562.058 491.396 572.327 487.294 C 582.596 483.193 591.911 477.019 599.69 469.16 L 777.76 289.26 C 792.751 274.02 801.098 253.436 800.956 232.059 C 800.814 210.681 792.193 190.211 777.001 175.171 C 761.808 160.132 741.251 151.72 719.873 151.795 C 698.495 151.869 677.997 160.425 662.91 175.57 C 662.91 175.57 567 299.74 540 299.74 C 513 299.74 417.09 175.57 417.09 175.57 C 401.99 160.492 381.514 151.993 360.175 151.946 C 338.835 151.9 318.323 160.308 303.157 175.32 C 287.99 190.332 279.372 210.757 279.2 232.096 C 279.029 253.435 287.317 273.996 302.24 289.25 L 480.31 469.15 C 488.088 477.011 497.403 483.186 507.672 487.29 C 517.941 491.393 528.946 493.337 540 493 Z",
                ],
            })}

            fill="#F4F4F4"/>
        </svg>
    )
};

const Svganim3 = () => {
    const mediaQ = useMediaQuery({ query: '(max-aspect-ratio: 3/4) and (max-width: 800px)' });
    const mobileLaxVal = () => {
        if(mediaQ) {
            return [150, 450];
        } else {
            return [250, 600];
        };
    };

    const [pathAnim , set] = useSpring(() => ({scroll3: mobileLaxVal()[0],}));

    const bind = useScroll(
        ({ xy: [, y] }) => {
            set({ scroll3: Math.min(Math.max(parseInt(y), mobileLaxVal()[0]), mobileLaxVal()[1]) });
        },
        { domTarget: window },
    ); 

    React.useEffect(bind, [bind]);

    return (        
        <svg id="Layer_2" data-name="Layer 2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1080 1080">
            <title>svganim3</title>
            <animated.path 
            d={pathAnim.scroll3.interpolate({
                range: mobileLaxVal(),
                output: [                  
                    "M 540.5 489 C 537.087 489 533.707 489.339 530.408 489.999 C 527.108 490.659 523.888 491.64 520.792 492.922 C 517.697 494.204 514.727 495.788 511.927 497.654 C 509.127 499.521 506.498 501.671 504.084 504.084 C 494.43 513.738 489 526.847 489 540.5 C 489 554.153 494.43 567.262 504.084 576.916 C 508.911 581.743 514.602 585.514 520.792 588.078 C 526.983 590.643 533.673 592 540.5 592 C 554.153 592 567.262 586.57 576.916 576.916 C 586.57 567.262 592 554.153 592 540.5 C 592 526.847 586.57 513.738 576.916 504.084 C 572.089 499.257 566.398 495.486 560.208 492.922 C 554.017 490.358 547.327 489 540.5 489 Q 540.5 489 540.5 489",
                    
                    "M 608.51 50.54 C 546.22 42.73 481.48 42.47 419 52.79 C 419 52.79 419 52.79 419 52.79 C 345.76 64.88 275.56 91.47 215.91 137.45 C 129.09 204.34 81 304.34 75.93 413.08 C 72.62 484.87 89.76 554.86 110.46 623 C 137.1 710.68 154.28 810.56 209.9 885.51 C 296.49 1002.18 463.9 1051.34 603.82 1030.51 C 694.24 1017.02 789.82 965.66 817.6 872.84 C 827.9 838.48 832.92 801.56 850.52 769.84 C 871.61 731.78 909.87 709.56 938.92 678.58 C 974.8 640.3 989.26 592.58 998.2 542.18 C 1017.76 431.79 991.04 314.83 926.54 223.26 C 859.23 127.62 759.36 76.37 646 56.19 Q 627.34 52.88 608.51 50.54",
                ],
            })}

            fill="#F9A846"/>
        </svg>
    )
};


export { Svganim1, Svganim2, Svganim3 };

  